{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amal9\\\\Desktop\\\\ReactProject\\\\chatapp\\\\src\\\\components\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport attach from \"../image/attach-file.png\";\nimport gallery from \"../image/gallery.png\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { arrayUnion, doc, serverTimestamp, Timestamp, updateDoc } from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [image, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n  const handleSend = async () => {\n    const handleSend = async () => {\n      if (image) {\n        const storageRef = ref(storage, uuid());\n        const uploadTask = uploadBytesResumable(storageRef, image);\n        uploadTask.on(error => {\n          //TODO:Handle Error\n        }, () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n            await updateDoc(doc(db, \"chats\", data.chatId), {\n              messages: arrayUnion({\n                id: uuid(),\n                text,\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                img: downloadURL\n              })\n            });\n          });\n        });\n      } else {\n        await updateDoc(doc(db, \"chats\", data.chatId), {\n          messages: arrayUnion({\n            id: uuid(),\n            text,\n            senderId: currentUser.uid,\n            date: Timestamp.now()\n          })\n        });\n      }\n      await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n        [data.chatId + \".lastMessage\"]: {\n          text\n        },\n        [data.chatId + \".date\"]: serverTimestamp()\n      });\n      await updateDoc(doc(db, \"userChats\", data.user.uid), {\n        [data.chatId + \".lastMessage\"]: {\n          text\n        },\n        [data.chatId + \".date\"]: serverTimestamp()\n      });\n      setText(\"\");\n      setImg(null);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type something...\",\n        id: \"inputText\",\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          style: {\n            display: \"none\"\n          },\n          id: \"file\",\n          onChange: e => setImg(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: attach,\n          className: \"icon\",\n          alt: \"Attach\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: gallery,\n            className: \"icon\",\n            alt: \"Gallery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  };\n}\n_s(Input, \"lYy7Me57+y72zqa1VeKEq8bc90U=\");\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useContext","useState","attach","gallery","AuthContext","ChatContext","arrayUnion","doc","serverTimestamp","Timestamp","updateDoc","db","storage","v4","uuid","getDownloadURL","ref","uploadBytesResumable","jsxDEV","_jsxDEV","Input","_s","text","setText","image","setImg","currentUser","data","handleSend","storageRef","uploadTask","on","error","snapshot","then","downloadURL","chatId","messages","id","senderId","uid","date","now","img","user","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","style","display","files","src","alt","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/amal9/Desktop/ReactProject/chatapp/src/components/Input.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport attach from \"../image/attach-file.png\";\r\nimport gallery from \"../image/gallery.png\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { ChatContext } from \"../context/ChatContext\";\r\nimport {\r\n  arrayUnion,\r\n  doc,\r\n  serverTimestamp,\r\n  Timestamp,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { db, storage } from \"../firebase\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\r\n\r\nexport default function Input() {\r\n  const [text, setText] = useState(\"\");\r\n  const [image, setImg] = useState(null);\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { data } = useContext(ChatContext);\r\n\r\n  const handleSend = async () => {\r\n    const handleSend = async () => {\r\n      if (image) {\r\n        const storageRef = ref(storage, uuid());\r\n\r\n        const uploadTask = uploadBytesResumable(storageRef, image);\r\n\r\n        uploadTask.on(\r\n          (error) => {\r\n            //TODO:Handle Error\r\n          },\r\n          () => {\r\n            getDownloadURL(uploadTask.snapshot.ref).then(\r\n              async (downloadURL) => {\r\n                await updateDoc(doc(db, \"chats\", data.chatId), {\r\n                  messages: arrayUnion({\r\n                    id: uuid(),\r\n                    text,\r\n                    senderId: currentUser.uid,\r\n                    date: Timestamp.now(),\r\n                    img: downloadURL,\r\n                  }),\r\n                });\r\n              }\r\n            );\r\n          }\r\n        );\r\n      } else {\r\n        await updateDoc(doc(db, \"chats\", data.chatId), {\r\n          messages: arrayUnion({\r\n            id: uuid(),\r\n            text,\r\n            senderId: currentUser.uid,\r\n            date: Timestamp.now(),\r\n          }),\r\n        });\r\n      }\r\n\r\n      await updateDoc(doc(db, \"userChats\", currentUser.uid), {\r\n        [data.chatId + \".lastMessage\"]: {\r\n          text,\r\n        },\r\n        [data.chatId + \".date\"]: serverTimestamp(),\r\n      });\r\n\r\n      await updateDoc(doc(db, \"userChats\", data.user.uid), {\r\n        [data.chatId + \".lastMessage\"]: {\r\n          text,\r\n        },\r\n        [data.chatId + \".date\"]: serverTimestamp(),\r\n      });\r\n\r\n      setText(\"\");\r\n      setImg(null);\r\n    };\r\n\r\n    return (\r\n      <div className=\"Input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type something...\"\r\n          id=\"inputText\"\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n        <div className=\"Icons\">\r\n          <input\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            id=\"file\"\r\n            onChange={(e) => setImg(e.target.files[0])}\r\n          />\r\n          <img src={attach} className=\"icon\" alt=\"Attach\" />\r\n          <label htmlFor=\"file\">\r\n            <img src={gallery} className=\"icon\" alt=\"Gallery\" />\r\n          </label>\r\n          <button onClick={handleSend}>send</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}